version: '3.8'

services:
  web:
    build: .
    container_name: django_web
    command: gunicorn ShowTicketing.wsgi:application --bind 0.0.0.0:8000 --workers 3
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost
      - POSTGRES_DB=ticketing
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - DATABASE_HOST=postgres_db
      - CELERY_BROKER_URL=redis://localhost:6379/0
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      - POSTGRES_DB=ticketing
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis/redis-stack:latest
    container_name: redis_stack
    ports:
      - "6379:6379"
      - "8001:8001"  # Expose the web UI port
    command: ["redis-server", "--appendonly", "yes"]  # Ensuring Redis runs in standalone mode
    environment:
      - HTTP_PORT=8001  # Set the web UI port


  celery:
    build: .
    container_name: celery_worker
    command: celery -A ShowTicketing worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://localhost:6379/0
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0
    depends_on:
      - db
      - redis
  

  celery-beat:
    build: .
    container_name: celery_beat
    command: celery -A ShowTicketing beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://localhost:6379/0
      - CELERY_RESULT_BACKEND=redis://localhost:6379/0
    depends_on:
      - db
      - redis
    
volumes:
  postgres_data:
